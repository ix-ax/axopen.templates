name: "axosimple"
version: '0.0.0-dev.0'
type: app
targets:
  - plcsim
  # - swcpu 
  # - "1500"
  # - llvm
registries:
  '@ix-ax': https://npm.pkg.github.com/
devDependencies:
  "@ix-ax/ax-sdk": '0.0.0-dev.0'
  #"@ix-ax/ax-sdk": '0.4.3-dev-2311.790'  
  "@ax/st-lang-contrib-library-toolbox": ^0.17.2
dependencies:
  "@ix-ax/axopen.data": '0.0.0-dev.0'
  "@ix-ax/axopen.inspectors": '0.0.0-dev.0'
  "@ix-ax/axopen.components.elements": '0.0.0-dev.0'
  "@ix-ax/axopen.components.pneumatics": '0.0.0-dev.0'
  "@ix-ax/axopen.components.cognex.vision": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.drives": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.rexroth.drives": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.rexroth.press": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.festo.drives": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.abb.robotics": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.mitsubishi.robotics": '0.0.0-dev.0'
  "@ix-ax/axopen.components.ur.robotics": '0.0.0-dev.0'
  "@ix-ax/axopen.simatic1500": '0.0.0-dev.0'
  "@ax/certificate-management": ^1.1.1
  # "@ix-ax/axopen.data": '0.4.4-alpha.857'
  # "@ix-ax/axopen.inspectors": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.elements": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.pneumatics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.cognex.vision": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.drives": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.rexroth.drives": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.rexroth.press": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.festo.drives": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.abb.robotics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.mitsubishi.robotics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.ur.robotics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.simatic1500": '0.4.4-alpha.857'
variables:
  APAX_BUILD_ARGS: [ -d ]
  PLC_NAME: "plc_line"
  # Uncomment if you want overrite system variables
  AXTARGET: 192.168.0.4
  AXTARGETPLATFORMINPUT: './bin/plcsim/'
  AX_USERNAME: "adm"
  MY_VERY_STRONG_PASSWORD: "1abcdss1364654aUOIREWNKSHDJFHK368924hlsdkfh@"
scripts:
  ixc:
    - dotnet tool restore --no-cache
    - dotnet ixc
    - dotnet ixr
  postbuild: apax ixc
  push:
    - apax build
    - apax download
  build:
    - apax install
    - apax build
  addunit: |
    while [ -z "$unitname" ]; do
      echo "Enter the unit name (mandatory):"
      echo "ATTENTION: The name must start with upper-case letter, no space and no special characters. The name must comply with legal type name for AX"
      read unitname
    done

    dotnet new install ./src/templates/unit/ --force
    # Execute the dotnet new command with the provided class name
    dotnet new axosimple_unit --unitname=$unitname  -o ./src/$unitname 

    # Move twin files to twin project 
    mkdir -p ../axpansion/twin/Context/Units/
    mv  ./src/$unitname/twin/*.cs ../axpansion/twin/Context/Units/
    rm -rf ./src/$unitname/twin/

    # Move server files to server project 
    mkdir -p ../axpansion/server/Pages/Context/Units/
    mv  ./src/$unitname/server/*.* ../axpansion/server/Pages/Context/Units/
    rm -rf ./src/$unitname/server/
  download:
    # Here you will need to set the argumen -t to your plc IP and -i to platfrom you are dowloading to
    # --default-server-interface is a must if you are using WebAPI          
    # - apax sld load -C ../.certs/Certificate.cer --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r
    # - apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r
    - apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r -C ./certs/$PLC_NAME/$PLC_NAME.cer
  delta:
    # Here you will need to set the argumen -t to your plc IP and -i to platfrom you are dowloading to
    # --default-server-interface is a must if you are using WebAPI 
    - apax build --ignore-scripts
    # apax sld load -C ../.certs/Certificate.cer --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT --mode delta
    - apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT --mode delta
    # For proper execution of these scripts, the following variables need to be defined as environment variables or local variables.
    # Local variables can override environment variables.
    # It is highly recommended NOT to store secrets such as 'AX_USERNAME' and 'MY_VERY_STRONG_PASSWORD' in local variables.
    # PLC_NAME: Name of the PLC (also equal to the PLC Profinet name)
    # AX_USERNAME: Name of the PLC user used for WebAPI and HMI
    # AXTARGET: IP address of the PLC
    # AXTARGETPLATFORMINPUT: Folder of the compiled software to be downloaded to the PLC. Use the value ".\bin\plcsim\" in case PLCSIM is used. For an S7-1500 controller, use ".\bin\1500\"
    # AXTARGETPLCSIMINSTANCE: Name of the PLCSIM instance to start. The instance must already exist.
    # MY_VERY_STRONG_PASSWORD: Password for 'AX_USERNAME'
    # PNIO_MAC: MAC address of the network adapter connected to the Profinet network  
  plcsim: ..\\..\\scripts\\StartPlcSimAdvCli.exe #start PLCSIM

  r: | #restart PLC
    ..\\..\\scripts\\restart_PLC.sh $AXTARGET $PLC_NAME

  dcpli: | # list all interfaces, used to discover MAC address of the adapter connected to PLC 
    ..\\..\\scripts\\dcp_utility_list_interfaces.sh 

  dcpd: | # discover all accesible devices connected to adapter with MAC address equal to entered MAC, used to discover MAC-addresses of the slaves
    ..\\..\\scripts\\dcp_utility_discover.sh $PNIO_MAC

  hdl: | #List configured harware and its state
    ..\\..\\scripts\\hw_diag_list.sh $AXTARGET $PLC_NAME

  ci: | #clean and install dependencies
    apax clean
    apax install

  # reset_plc: ..\\scripts\\reset_plc.sh $AXTARGET
  clean_plc: ..\\scripts\\clean_plc.sh $AXTARGET
  ssc: ..\\scripts\\setup_secure_communication.sh $PLC_NAME $AX_USERNAME $MY_VERY_STRONG_PASSWORD
  gsd: ..\\scripts\\copy_and_install_gsd.sh
  hwl: ..\\scripts\\copy_hwl_templates.sh
  hwid: ..\\scripts\\copy_hardware_ids.sh
  hwfd: ..\\scripts\\hw_first_download.sh $PLC_NAME $AXTARGET $MY_VERY_STRONG_PASSWORD
  hwu: ..\\scripts\\hw_update.sh $PLC_NAME $AXTARGET
  swfd: ..\\scripts\\sw_build_and_download_full.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT
  swdd: ..\\scripts\\sw_build_and_download_delta.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT
  alf:
    - START=$(date +%s)
    - ..\\scripts\\all_first.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT $AX_USERNAME $MY_VERY_STRONG_PASSWORD
    - echo $(date +%D)"-"$(date +%H)":"$(date +%M)":"$(date +%S) " - Finished in :" $(expr $(date +%s) - $START) "s"

  all: START=$(date +%s) ..\\scripts\\all.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT echo $(date +%D)"-"$(date +%H)":"$(date +%M)":"$(date +%S) " - Finished in :" $(expr $(date +%s) - $START) "s"

publicKeys:
  "@ix-ax": 30c06ef7830b4dfd8f16e003508da1ac2d187714d0e1f38279a9332cbe4e4e17
installStrategy: overridable
apaxVersion: 3.1.1
