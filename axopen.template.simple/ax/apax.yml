name: "axosimple"
version: '0.0.0-dev.0'
type: app
targets:
  - "1500"
  #- plcsim
registries:
  '@ix-ax': https://npm.pkg.github.com/
devDependencies:
  "@ix-ax/ax-sdk": '0.0.0-dev.0'
  "@ax/sld": ^3.0.6-alpha
  "@ax/stc": ^7.1.81
  #"@ix-ax/ax-sdk": '0.4.3-dev-2311.790'  
  "@ax/st-lang-contrib-library-toolbox": ^0.17.2
dependencies:
  "@ix-ax/axopen.data": '0.0.0-dev.0'
  "@ix-ax/axopen.inspectors": '0.0.0-dev.0'
  "@ix-ax/axopen.components.elements": '0.0.0-dev.0'
  "@ix-ax/axopen.components.pneumatics": '0.0.0-dev.0'
  # "@ix-ax/axopen.components.cognex.vision": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.drives": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.rexroth.drives": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.rexroth.press": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.festo.drives": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.abb.robotics": '0.0.0-dev.0'
  #"@ix-ax/axopen.components.mitsubishi.robotics": '0.0.0-dev.0'
  # "@ix-ax/axopen.components.ur.robotics": '0.0.0-dev.0'
  "@ix-ax/axopen.simatic1500": '0.0.0-dev.0'
  "@ax/certificate-management": ^1.1.1
  "@ax/opcua-server-config": ^1.0.0
  # "@ix-ax/axopen.data": '0.4.4-alpha.857'
  # "@ix-ax/axopen.inspectors": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.elements": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.pneumatics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.cognex.vision": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.drives": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.rexroth.drives": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.rexroth.press": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.festo.drives": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.abb.robotics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.mitsubishi.robotics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.components.ur.robotics": '0.4.4-alpha.857'
  # "@ix-ax/axopen.simatic1500": '0.4.4-alpha.857'
variables:
  APAX_BUILD_ARGS: [ -d ]
  PLC_NAME: "plc_line"
  HWCONFIG: "TIA"
  # Uncomment if you want overrite system variables
  AXTARGET: 10.10.10.120
  AXTARGETPLATFORMINPUT: .\bin\1500\
  AX_USERNAME: "adm"
  AX_TARGET_PWD: "123ABCDabcd$#!"
  MY_VERY_STRONG_PASSWORD: $AX_TARGET_PWD
  COM_CERT_PATH: .\certs\Communication.cer
scripts:
  ci: apax clean apax install
  ixc:
    - dotnet tool restore --no-cache
    - dotnet ixc -d
    - dotnet ixr
  postbuild: apax ixc
  push:
    - apax build
    - apax download
  build:
    - apax build
  addunit: |
    while [ -z "$unitname" ]; do
      echo "Enter the unit name (mandatory):"
      echo "ATTENTION: The name must start with upper-case letter, no space and no special characters. The name must comply with legal type name for AX"
      read unitname
    done

    dotnet new install ./src/templates/unit/ --force
    # Execute the dotnet new command with the provided class name
    dotnet new axosimple_unit --unitname=$unitname  -o ./src/$unitname 

    # Move twin files to twin project 
    mkdir -p ../axpansion/twin/Context/Units/
    mv  ./src/$unitname/twin/*.cs ../axpansion/twin/Context/Units/
    rm -rf ./src/$unitname/twin/

    # Move server files to server project 
    mkdir -p ../axpansion/server/Pages/Context/Units/
    mv  ./src/$unitname/server/*.* ../axpansion/server/Pages/Context/Units/
    rm -rf ./src/$unitname/server/
  osrc: |
    if [[ "$HWCONFIG" == "TIA-NON-SECURE" ]]; then
       apax oscr interface install $AXTARGETPLATFORMINPUT -t $AXTARGET  --accept-security-disclaimer   
    fi   
  download: |
    apax build --ignore-scripts
    if [[ "$HWCONFIG" == "HWC" ]]; then
      apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r -C ./certs/$PLC_NAME/$PLC_NAME.cer      
    fi
    if [[ "$HWCONFIG" == "TIA" ]]; then
      apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r -C ./certs/TIA/Communication.cer --password $AX_TARGET_PWD   --username $AX_USERNAME 
    fi   
    if [[ "$HWCONFIG" == "TIA-NON-SECURE" ]]; then
      apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r    
    fi      
  delta: |
    apax build --ignore-scripts
    if [[ "$HWCONFIG" == "HWC" ]]; then
      apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -C ./certs/$PLC_NAME/$PLC_NAME.cer  --mode delta    
    fi
    if [[ "$HWCONFIG" == "TIA" ]]; then
      apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT -r -C ./certs/TIA/Communication.cer --password $AX_TARGET_PWD   --username $AX_USERNAME --mode delta    
    fi   
    if [[ "$HWCONFIG" == "TIA-NON-SECURE" ]]; then
      apax sld load --accept-security-disclaimer -t $AXTARGET -i $AXTARGETPLATFORMINPUT --mode delta
    fi      
  r: ..\\scripts\\restart_PLC.sh $AXTARGET $PLC_NAME
  dcpli: ..\\scripts\\dcp_utility_list_interfaces.sh
  dcpd: ..\\scripts\\dcp_utility_discover.sh $PNIO_MAC
  hdl: ..\\scripts\\hw_diag_list.sh $AXTARGET $PLC_NAME
  clean_plc: |
    if [[ "$HWCONFIG" == "HWC" ]]; then 
      ..\\scripts\\clean_plc.sh $AXTARGET 
    fi 
  ssc: |
    if 
      [[ "$HWCONFIG" == "HWC" ]]; then ..\\scripts\\setup_secure_communication.sh $PLC_NAME $AX_USERNAME $AX_TARGET_PWD 
    fi
  gsd: |
    if 
      [[ "$HWCONFIG" == "HWC" ]]; then
         ..\\scripts\\copy_and_install_gsd.sh 
    fi
  hwl: |
    if [[ "$HWCONFIG" == "HWC" ]]; then
      ..\\scripts\\copy_hwl_templates.sh 
    fi
  hwid: |
    if [[ "$HWCONFIG" == "HWC" ]]; then 
      ..\\scripts\\copy_hardware_ids.sh 
    fi
  hwfd: |
    if [[ "$HWCONFIG" == "HWC" ]]; then 
      ..\\scripts\\hw_first_download.sh $PLC_NAME $AXTARGET $AX_TARGET_PWD 
    fi
  hwu: |
    if [[ "$HWCONFIG" == "HWC" ]]; then 
      ..\\scripts\\hw_update.sh $PLC_NAME $AXTARGET 
    fi
  swfd: |
    if [[ "$HWCONFIG" == "HWC" ]]; then 
      ..\\scripts\\sw_build_and_download_full.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT 
    fi
  swdd: |
    if [[ "$HWCONFIG" == "HWC" ]]; then 
      ..\\scripts\\sw_build_and_download_delta.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT 
    fi
  alf:
    - START=$(date +%s)
    - |
      if 
        [[ "$HWCONFIG" == "HWC" ]]; then 
          ..\\scripts\\all_first.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT $AX_USERNAME $AX_TARGET_PWD 
      fi
    - echo $(date +%D)"-"$(date +%H)":"$(date +%M)":"$(date +%S) " - Finished in :" $(expr $(date +%s) - $START) "s"
  all:
    - START=$(date +%s)
    - |
      if 
        [[ "$HWCONFIG" == "HWC" ]]; then 
          ..\\scripts\\all.sh $PLC_NAME $AXTARGET $AXTARGETPLATFORMINPUT 
      fi
    - echo $(date +%D)"-"$(date +%H)":"$(date +%M)":"$(date +%S) " - Finished in :" $(expr $(date +%s) - $START) "s"

publicKeys:
  "@ix-ax": 30c06ef7830b4dfd8f16e003508da1ac2d187714d0e1f38279a9332cbe4e4e17
installStrategy: overridable
apaxVersion: 3.1.1
